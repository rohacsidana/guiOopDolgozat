package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JPanel;

public class vmi extends javax.swing.JFrame {

    private static final int DB = 10;
    
    private String[] modell;
    private JButton[] gombok;
    private int pinDb;
    private boolean kozepre;
    
    public vmi() {
        initComponents();
        
        //1. feladat */
        gombokIni();
        ujModell();
        frissitGuit();
    }

    private void gombokIni(){
        gombok = new JButton[DB];
        gombok[0] = jButton1;
        gombok[1] = jButton2;
        gombok[2] = jButton3;
        gombok[3] = jButton4;
        gombok[4] = jButton5;
        gombok[5] = jButton6;
        gombok[6] = jButton7;
        gombok[7] = jButton8;
        gombok[8] = jButton9;
        gombok[9] = jButton10;
        
        /* 4. feladat */
        for (JButton b : gombok) {
            b.addActionListener(new KattintasListener());
        }
        
        /* 5. feladat */
        kozepre = chbKozepre.isSelected();
    }
    
    /* BELSŐ OSZTÁLY */
    class KattintasListener implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {
            pinDb++;
            
            /* egyszerűbbb, de nem használja a modellt */
            //txtPin.setText(txtPin.getText() + e.getActionCommand());
            
            /* használja a modellt */
            int i = hanyadik((JButton)e.getSource());
            String s = modell[i];
            txtPin.setText(txtPin.getText() + s);
            
            if(pinDb >= 4){
                gombokEnged(false);
            }
        }
        private int hanyadik(JButton b){
            int i = 0;
            while(b != gombok[i]){
                i++;
            }
            return i;
        }
    }//class KattintasListener
    
    private void gombokEnged(boolean enged){
        for (JButton b : gombok) {
            b.setEnabled(enged);
        }
    }
    
    private void ujModell(){
        /* int tömb keverése saját -NAÍV- módszerrel */
//        int[] tomb = new int[DB];
//        for (int i = 0; i < DB; i++) { tomb[i] = i; }
//        
//        for (int i = 0; i < DB; i++) {
//            int rndInd = (int)(Math.random()*DB);
//            int temp = tomb[rndInd];
//            tomb[rndInd] = tomb[i];
//            tomb[i] = temp;
//        }
//        
//        for (int i : tomb) {
//            System.out.println(i + " ");
//        }
        
        //modell = new String[Bevitel.DB];
        /* 5. feladat */
        modell = new String[vmi.DB+1];
        Arrays.fill(modell, "x");
        List<Integer> szamok = new ArrayList<>();
        for (int i = 0; i < vmi.DB; i++) {
            szamok.add(i);
        }

        Collections.shuffle(szamok);

        for (int i = 0; i < vmi.DB; i++) {
            modell[i] = ""+szamok.get(i);
        }
        
        /* 5. feladat */
        if(kozepre){
            frissitModellt();
        }
    }
    
    private void frissitModellt(){
        String temp = modell[vmi.DB];
        modell[vmi.DB] = modell[vmi.DB - 1];
        modell[vmi.DB - 1] = temp;
    }
    
    private void frissitGuit(){
        
//        for (int i = 0; i < Bevitel.DB; i++) {
//            gombok[i].setText(modell[i]);
//        }

        /* 5. feladat */
        pnlBevitel.removeAll();
        for (int i = 0; i < vmi.DB-1; i++) {
            pnlBevitel.add(gombok[i]);
            gombok[i].setText(modell[i]);
        }
        String s = modell[vmi.DB-1];
        if(kozepre){
            pnlBevitel.add(new JPanel());
            s = modell[modell.length-1];
        }
        
        JButton b = gombok[gombok.length-1];
        pnlBevitel.add(b);
        b.setText(s);
        
        //pack();
        revalidate();
    }
    
    /* 6. feladat */
    private void frissitCui(){
        System.out.println("");
        for (int i = 0; i < modell.length; i++) {
            String n = modell[i];
            String ki = n.equals("x") ? " " : n;
            if(i != 0 && i % 3 == 0){
                System.out.println("");
            }
            System.out.print(ki + " ");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBevitel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        btnUjra = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPin = new javax.swing.JTextField();
        chbKozepre = new javax.swing.JCheckBox();
        btnKonzolra = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlBevitel.setBorder(javax.swing.BorderFactory.createTitledBorder("Bevitel"));
        pnlBevitel.setLayout(new java.awt.GridLayout(0, 3, 10, 10));

        jButton1.setText("jButton1");
        pnlBevitel.add(jButton1);

        jButton2.setText("jButton2");
        pnlBevitel.add(jButton2);

        jButton3.setText("jButton3");
        pnlBevitel.add(jButton3);

        jButton4.setText("jButton4");
        pnlBevitel.add(jButton4);

        jButton5.setText("jButton5");
        pnlBevitel.add(jButton5);

        jButton6.setText("jButton6");
        pnlBevitel.add(jButton6);

        jButton7.setText("jButton7");
        pnlBevitel.add(jButton7);

        jButton8.setText("jButton8");
        pnlBevitel.add(jButton8);

        jButton9.setText("jButton9");
        pnlBevitel.add(jButton9);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 39, Short.MAX_VALUE)
        );

        pnlBevitel.add(jPanel2);

        jButton10.setText("jButton10");
        pnlBevitel.add(jButton10);

        btnUjra.setText("Újra");
        btnUjra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUjraActionPerformed(evt);
            }
        });

        jLabel1.setText("bevitt pin:");

        chbKozepre.setText("Középre");
        chbKozepre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chbKozepreItemStateChanged(evt);
            }
        });

        btnKonzolra.setText("Konzolra");
        btnKonzolra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKonzolraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBevitel, javax.swing.GroupLayout.PREFERRED_SIZE, 177, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUjra)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chbKozepre, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKonzolra))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlBevitel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnUjra)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(4, 4, 4)
                        .addComponent(txtPin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnKonzolra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chbKozepre)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* 2-3 feladat */
    private void btnUjraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUjraActionPerformed
        pinDb = 0;
        gombokEnged(true);
        txtPin.setText("");
        
        ujModell();
        frissitGuit();
    }//GEN-LAST:event_btnUjraActionPerformed

    /* 6. feladat */
    private void btnKonzolraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKonzolraActionPerformed
        frissitCui();
    }//GEN-LAST:event_btnKonzolraActionPerformed

    private void chbKozepreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chbKozepreItemStateChanged
        kozepre = chbKozepre.isSelected();
        frissitModellt();
        frissitGuit();
    }//GEN-LAST:event_chbKozepreItemStateChanged

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vmi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vmi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vmi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vmi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vmi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKonzolra;
    private javax.swing.JButton btnUjra;
    private javax.swing.JCheckBox chbKozepre;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel pnlBevitel;
    private javax.swing.JTextField txtPin;
    // End of variables declaration//GEN-END:variables
}
